{"ast":null,"code":"var _jsxFileName = \"/Users/mehadikhan/iCloud Drive (Archive)/Documents/Full Stack/Back End/Final-Project/smartbrain/facerecognition/src/App.js\";\nimport React from 'react';\n//import Clari fai from 'clarifai';\nimport './App.css';\nimport Navigation from './Componenets/Navigation/Navigation';\nimport Logo from './Componenets/Logo/Logo';\nimport ImageLinkForm from './Componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './Componenets/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Componenets/FaceRecognition/FaceRecognition';\nimport SignIn from './Componenets/SignIn/SignIn';\nimport Register from './Componenets/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = 'c1d3ee5cb1ba45db96db0daac7864ad0';\n  const USER_ID = 'mehadi_khan';\n  const APP_ID = 'Smart-Brain';\n  //const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    //mode: 'no-cors',\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        // bottomRow: height - (clarifaiFace.bottom_row * height),\n        // leftCol: clarifaiFace.left_col * width,\n        // rightCol: width - (clarifaiFace.right_col * width),\n        // topRow: height - (clarifaiFace.top_row * height)\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/versions/\" + \"6dc7e46bc9124c5c8824be4822abe105\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(result => {\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(result));\n      }).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        className: \"particles\",\n        color: \"#ffffff\",\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","FaceRecognition","SignIn","Register","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","initialState","input","box","route","isSignedIn","user","id","name","email","entries","joined","App","Component","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","then","response","json","result","catch","console","log","error","onRouteChange","render","className","children","color","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mehadikhan/iCloud Drive (Archive)/Documents/Full Stack/Back End/Final-Project/smartbrain/facerecognition/src/App.js"],"sourcesContent":["import React, {} from 'react';\n//import Clari fai from 'clarifai';\nimport './App.css';\nimport Navigation from './Componenets/Navigation/Navigation';\nimport Logo from './Componenets/Logo/Logo';\nimport ImageLinkForm from './Componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './Componenets/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport FaceRecognition from './Componenets/FaceRecognition/FaceRecognition';\nimport SignIn from './Componenets/SignIn/SignIn';\nimport Register from './Componenets/Register/Register';\n\n\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = 'c1d3ee5cb1ba45db96db0daac7864ad0';\n  const USER_ID = 'mehadi_khan';\n  const APP_ID = 'Smart-Brain';\n  //const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID,\n    },\n    \"inputs\": [\n      {\n        \"data\": {\n          \"image\": {\n            \"url\": IMAGE_URL\n          }\n        }\n      }\n    ]\n  });\n\n  const requestOptions = {\n    //mode: 'no-cors',\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  return requestOptions;\n\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\n\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  };\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  };\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      // bottomRow: height - (clarifaiFace.bottom_row * height),\n      // leftCol: clarifaiFace.left_col * width,\n      // rightCol: width - (clarifaiFace.right_col * width),\n      // topRow: height - (clarifaiFace.top_row * height)\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/versions/\" + \"6dc7e46bc9124c5c8824be4822abe105\" + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(result => {\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n            .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(result))\n      })\n      .catch(error => console.log('error', error))\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg className='particles' color='#ffffff' type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home'\n          ? <div>\n            <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries} />\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n          : (\n            route === 'signin'\n              ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n\n          )\n        }\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}